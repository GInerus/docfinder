<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>